import { TextEnhancerModel } from '../model/TextEnhancerModel.js'

export class TextEnhancerController {
  #model

  constructor(config) {
    this.#model = new TextEnhancerModel(config)
  }

  // Text size manipulation methods:
  increaseTextSize() {
    this.#model.increaseTextSize()
  }

  decreaseTextSize() {
    this.#model.decreaseTextSize()
  }

  setTextToMax() {
    this.#model.setTextToMax()
  }

  setTextToMin() {
    this.#model.setTextToMin()
  }

  restoreTextSize() {
    this.#model.restoreTextSize()
  }

  // font manipulation methods:
  cycleFontSet() {
    this.#model.cycleFontSet()
  }

  restoreFontFamily() {
    this.#model.restoreFontFamily()
  }

  // Text and background color manipulation methods:
  changeTextColor(color) {
    this.#model.changeTextColor(color)
  }

  changeBackgroundColor(color) {
    this.#model.changeBackgroundColor(color)
  }

  applyColorTheme(themeName) {
    this.#model.applyColorTheme(themeName)
  }

  restoreColors() {
    this.#model.restoreColors()
  }

  // Update the selectors and reinitialize the model
  updateTarget(newSelectors) {
    this.#model.updateTarget(newSelectors)
  }

  // Get current font set name
  getCurrentFontSet() {
    return this.#model.getCurrentFontSet()
  }

  // Get current configuration (copy)
  getConfig() {
    return this.#model.getConfig()
  }

  get elements() {
    return this.#model.elementStates.map(state => state.element)
  }
}
