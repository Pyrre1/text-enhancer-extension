export class ElementStyleState {
  #element
  #originalFontSize
  #originalFontFamily
  #originalColor
  #originalBackgroundColor
  #isInlineFontSize
  #isInlineFontFamily
  #isInlineColor
  #isInlineBackgroundColor

  constructor(element) {
    this.#element = element

    const computed = window.getComputedStyle(element)
    const inlineFontSize = element.style.fontSize
    const inlineFontFamily = element.style.fontFamily

    this.#originalFontSize = computed.fontSize
    this.#originalFontFamily = computed.fontFamily
    this.#originalColor = computed.color
    this.#originalBackgroundColor = computed.backgroundColor
    this.#isInlineFontSize = inlineFontSize !== ''
    this.#isInlineFontFamily = inlineFontFamily !== ''
    this.#isInlineColor = element.style.color !== ''
    this.#isInlineBackgroundColor = element.style.backgroundColor !== ''
  }

  get element() {
    return this.#element
  }

  get originalFontSize() {
    return this.#originalFontSize
  }

  get originalFontFamily() {
    return this.#originalFontFamily
  }

  get originalColor() {
    return this.#originalColor
  }

  get originalBackgroundColor() {
    return this.#originalBackgroundColor
  }

  applyFontSize(size, unit = 'px') {
    this.#element.style.fontSize = `${size}${unit}`
  }

  restoreFontSize() {
    if (this.#isInlineFontSize) {
      this.#element.style.fontSize = this.#originalFontSize
    } else {
      this.#element.style.removeProperty('font-size')
    }
  }

  applyFontFamily(fontStack) {
    this.#element.style.fontFamily = fontStack
  }

  restoreFontFamily() {
    if (this.#isInlineFontFamily) {
      this.#element.style.fontFamily = this.#originalFontFamily
    } else {
      this.#element.style.removeProperty('font-family')
    }
  }

  applyColor(color) {
    this.#element.style.color = color
  }

  restoreColor() {
    if (this.#isInlineColor) {
      this.#element.style.color = this.#originalColor
    } else {
      this.#element.style.removeProperty('color')
    }
  }

  applyBackgroundColor(color) {
    this.#element.style.backgroundColor = color
  }

  restoreBackgroundColor() {
    if (this.#isInlineBackgroundColor) {
      this.#element.style.backgroundColor = this.#originalBackgroundColor 
    } else {
      this.#element.style.removeProperty('background-color')
    }
  }
}
