// Utility functions for unit conversion and relative step calculation, return null if something goes wrong
// TODO: Decide if Null or Error is better option 
// Refactored from respons L2.
function computeRelativeStep(element, stepValue, originalTextSize) {
  const originalSize = originalTextSize.get(element)
  const match = originalSize.match(/^([\d.]+)([a-z%]+)$/) // e.g., "16px", "1.2em", "100%"
  if (!match) {
    return null
  }

  const relativeValue = parseFloat(match[1])
  const pxEquivalent = parseFloat(window.getComputedStyle(element).fontSize)
  if (isNaN(pxEquivalent) || pxEquivalent <= 0) {
    return null
  }

  const multiplier = (pxEquivalent + stepValue) / pxEquivalent
  const relativeSizeIncreased = relativeValue * multiplier

  return relativeSizeIncreased - relativeValue
}

// Calculate average relative step for a list of elements, adds all valid steps and divides by the count.
export function calculateAverageStepRelativeStep(elements, stepValue, originalTextSize) {
  let total = 0
  let count = 0

  elements.forEach(element => {
    const step = computeRelativeStep(element, stepValue, originalTextSize)
    if (step !== null) {
      total += step
      count++
    }
  })

  return count > 0 ? total / count : null
}

// Normalize all elements to pixel units based on their computed font size.
export function normalizeElementsToPixels(elementStates) {
  elementStates.forEach(state => {
    const pxSize = getComputedStyle(state.element).fontSize
    state.applyFontSize(parseFloat(pxSize), 'px')
  })
}